import { environment } from './../../../environments/environment';
export const StaticApis = {
  loginApiEndPoint: '/login',
  getUsersApiEndPoint: '/getUsers',
  addUserApiEndPoint: '/addUser',
  updateUserApiEndPoint: '/updateUserAdvanced',
  deleteUserApiEndPoint: '/deleteUser',
  getTenantsApiEndPoint: '/getTenants',
  getTenantDetailsApiEndPoint: '/getTenantDetails',
  addTenantApiEndPoint: '/addTenant',
  updateTenantApiEndPoint: '/updateTenant',
  deleteTenantApiEndPoint: '/deleteTenant',
  forgotpassword: '/forgotPassword',
  resetPassword: '/resetPassword',
  getAlerts: '/getAlerts',
  getZonesApiEndPoint: '/getZones',
  getModelsApiEndPoint: '/getModels',
  addZoneApiEndPoint: '/addZone',
  deleteZoneApiEndPoint: '/deleteZone',
  updateZoneApiEndpoint: '/updateZone',
  assignUserToZoneApiEndPoint: '/assignUserToZone',
  assignAssetToZoneApiEndPoint: '/assignAssetToZone',
  unassignUserFromZoneApiEndPoint: '/unassignUserFromZone',
  unAssignAssetFromZoneApiEndPoint: '/unAssignAssetFromZone',
  getAssetsApiEndPoint: '/getAssets',
  deleteAssetsApiEndPoint: '/deleteAsset',
  getHealthStateDataApiEndpoint: '/apps/' + environment.app.id + '/dashboard/asset/healthState?tenantID=',
  getBatteryStatusServiceApiEndpoint: '/apps/' + environment.app.id + '/dashboard/assetsWithAlerts/count?tenantID=',
  getBatteryStatusListServiceApiEndPoint: '/apps/' + environment.app.id + '/dashboard/assetsWithAlerts/list?tenantID=',
  getMonitoredBatteryServiceApiEndPoint: '/apps/' + environment.app.id + '/dashboard/monitoredbatteries/count?tenantID=',
  getChargeStateServiceApiEndPoint: '/apps/' + environment.app.id + '/dashboard/charge/status?tenantID=',
  getHealthStateServiceApiEndPoint: '/apps/' + environment.app.id + '/dashboard/assets/status?tenantID=',
  getStatusApiEndPoint: '/apps/' + environment.app.id + '/dashboard/assets/status?tenantID=',
  getIssuesApiEndPoint: '/apps/' + environment.app.id + 'dashboard/sensors/issues?tenantID=',
  getWeakBatteryCellCountApiEndPoint: '/apps/' + environment.app.id + '/dashboard/assetsWithAlerts/count?tenantID=',
  getTheftBatteryCellCountApiEndPoint: '/apps/' + environment.app.id + '/dashboard/assetsWithAlerts/count?tenantID=',
  getWeakBatteryCellsApiEndPoint: '/apps/' + environment.app.id + '/dashboard/assetsWithWeekCells/list?tenantID=',
  getTheftBatteryBanksApiEndPoint: '/apps/' + environment.app.id + '/dashboard/assetsWithMovementAlerts/list?tenantID=',
  getHealthStateDataApiEndPoint: '/apps/' + environment.app.id + '/dashboard/asset/healthState?tenantID=',
  isValidTokenApiEndpoint: '/deployAndUpdateRules',
  deployAndUpdateRulesApiEndpoint: '/authenticateUserWithToken',



  getCellReadingsApiEndpoint: '/getCellReadings',
  getTrendChartApiEndPoint: '/trendChart',
  getSensorReadingsApiEndPoint: '/getSensorReadings',
  getFaultyCellsApiEndPoint: '/getFaultyCells',
  getAssetInfoApiEndPoint: '/getAssetInfo',
  getDischargeCyclesApiEndPoint: '/getDischargeCycles',
  getChargeCyclesApiEndPoint: '/getChargeCycles',
  getTemperatureApiEndpoint: '/apps/' + environment.app.id + '/analytics/temperature?tenantID=',
  getAhoutInfoApiEndpoint: '/apps/' + environment.app.id + '/analytics/cumulativeAh?tenantID=',
  getVoltagesApiEndpoint: '/apps/' + environment.app.id + '/analytics/voltages?tenantID=',
  getcharge_dischargeVoltageApiEndpoint: '/apps/' + environment.app.id + '/cycle/voltages?tenantID=',
  getCharge_dischargeAHApiEndpoint: '/apps/' + environment.app.id + '/cycle/cumulativeAh?tenantID=',

  getSensorIssuesApiEndpoint: '/apps/' + environment.app.id + '/analytics/sensors/issues?tenantID=',
  getAssetIssuesApiEndpoint: '/apps/' + environment.app.id + '/analytics/assets/count?tenantID=',
  getTemperatureInfoApiEndpoint: '/apps/' + environment.app.id + '/analytics/temperature?tenantID=',
  getAssetsServiceApiEndPoint: '/apps/' + environment.app.id + '/analytics/list/geo/assets?tenantID='
};

export const StaticChecks = {
  add: 'ADD',
  edit: 'EDIT',
  accessForbidden: 'FORBIDDEN',
  wrongToken: 'WRONG_TOKEN',
  wrongPassword: 'WRONG_PASSWORD',
  invalidGrant: 'GRANT',
  exists: 'EXISTS',
  invalidInput: 'INVALID_INPUT_DATA',
  emptyInput: 'EMPTY INPUT',
  objectNotFound: 'OBJECT_NOT_FOUND',
  devicesNotFound: 'DEVICES NOT FOUND',
  duplicateParameters: 'DUPLICATE/MISSING',
  readingsNotFound: 'READINGS NOT FOUND'
}
